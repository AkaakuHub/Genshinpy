name: Manual Character Data Scraping

on:
  workflow_dispatch:
    inputs:
      character_limit:
        description: 'Maximum number of characters to scrape (0 = all)'
        required: false
        default: '0'
        type: number
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  manual-scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Chrome/Chromium for Puppeteer
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Puppeteer browsers
        run: npx puppeteer browsers install chrome

      - name: Run manual scraping
        run: node --import tsx/esm manual-scrape.ts
        env:
          NODE_ENV: production
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome
          CHARACTER_LIMIT: ${{ inputs.character_limit }}
          FORCE_UPDATE: ${{ inputs.force_update }}

      - name: Check for changes
        id: check-changes
        run: |
          if [ "${{ inputs.force_update }}" == "true" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            git diff --quiet || echo "changes=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ api/
          git commit -m "Manual data update - $(date '+%Y-%m-%d %H:%M:%S JST')

          Character limit: ${{ inputs.character_limit }}
          Force update: ${{ inputs.force_update }}"
          git push

      - name: Create detailed summary
        if: always()
        run: |
          echo "## Manual Scraping Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date '+%Y-%m-%d %H:%M:%S JST')" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Character Limit**: ${{ inputs.character_limit }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Force Update**: ${{ inputs.force_update }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "data/characters.json" ]; then
            CHARACTER_COUNT=$(jq '.characters | length' data/characters.json)
            echo "- **Characters Found**: $CHARACTER_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- **Last Updated**: $(jq -r '.lastUpdated' data/characters.json)" >> $GITHUB_STEP_SUMMARY
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Recent Characters (First 5)" >> $GITHUB_STEP_SUMMARY
            jq -r '.characters[:5] | .[] | "- " + .name + " (" + .nameJa + ") - " + .element + " " + .weaponType' data/characters.json >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.check-changes.outputs.changes }}" == "true" ]; then
            echo "- **Changes**: ✅ New data committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Changes**: ℹ️ No changes detected" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scraping-results-${{ github.run_number }}
          path: |
            data/
            api/
            *.log
          retention-days: 30