name: Scrape Genshin Data and Deploy to GitHub Pages

on:
  # 手動実行
  workflow_dispatch:
  # 毎週日曜日午前3時（JST 12時）に実行
  schedule:
    - cron: '0 3 * * 0'
  # mainブランチにプッシュされた時
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

# 同時実行を防ぐ
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  scrape-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Create assets directory
      run: mkdir -p genshin-viewer/public/assets/images

    - name: Initial build check (debug)
      run: |
        cd genshin-viewer
        pwd
        ls -la
        pnpm install --frozen-lockfile
        npx vite build --config vite.config.ts
        echo "✅ Initial build successful"

    - name: Scrape all character data
      run: |
        echo "🚀 Starting comprehensive character data scraping..."
        echo "📡 Fetching character list dynamically from API..."
        pnpm tsx scrape-all-characters.ts

    - name: Commit scraped data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add genshin-viewer/public/data/
        git add genshin-viewer/public/assets/images/
        if ! git diff --cached --quiet; then
          git commit -m "bot: Update character data $(date '+%Y-%m-%d %H:%M')"
          git push
        else
          echo "No changes to commit"
        fi

    - name: Build React application
      run: |
        cd genshin-viewer
        pwd
        ls -la
        pnpm install --frozen-lockfile
        npx vite build --config vite.config.ts

    - name: Commit built dist
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add genshin-viewer/dist/
        if ! git diff --cached --quiet; then
          git commit -m "bot: Update built dist $(date '+%Y-%m-%d %H:%M')"
          git push
        else
          echo "No dist changes to commit"
        fi

    - name: Notify completion
      run: |
        echo "🎉 Deployment completed!"
        echo "📊 All character data scraped and deployed"
        echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"