name: Scrape and Deploy

on:
  schedule:
    # Run every day at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:
    # Allow manual trigger
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/**'

jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Type check
        run: npm run type-check

      - name: Check for unused code
        run: npm run knip

  scrape-and-deploy:
    needs: quality-check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run scraper
        run: npm run scrape
        env:
          NODE_ENV: production

      - name: Generate API documentation
        run: |
          echo "# Genshin API" > api/README.md
          echo "Last updated: $(date)" >> api/README.md
          echo "" >> api/README.md
          echo "## Endpoints" >> api/README.md
          echo "- \`GET /api/index.json\` - Get all characters list" >> api/README.md
          echo "- \`GET /api/characters/{id}.json\` - Get character by ID" >> api/README.md

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './api'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Commit updated data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ api/
          git diff --staged --quiet || git commit -m "Update character data - $(date)"
          git push

  notification:
    needs: scrape-and-deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify completion
        run: |
          if [ "${{ needs.scrape-and-deploy.result }}" = "success" ]; then
            echo "✅ Scraping and deployment completed successfully"
          else
            echo "❌ Scraping and deployment failed"
            exit 1
          fi